-- -- DROP TABLE AGENTS;
-- -- DROP TABLE ORDERS;
-- -- DROP TABLE CUSTOMER;
-- -- DROP TABLE BOOKING;
-- -- DROP TABLE BRANCH;
-- -- DROP TABLE CARINSURANCE;
-- -- DROP TABLE RESERVATION;


CREATE TABLE BOOKING
(   Booking_ID NUMBER(10),
    Customer_ID NUMBER(10),
    PRIMARY KEY (Booking_ID)
);

CREATE TABLE RECEPTION (
    Reception_ID Number(10),
    Booking_ID Number(10),
    Customer_ID Number(10),
    PRIMARY KEY (Reception_ID)
);

CREATE TABLE RESERVATION
(  Reservation_ID NUMBER (10) NOT NULL,
  Booking_Status VARCHAR (255),
  From_Date DATE,
  Return_Date DATE,
  Actual_Return_Date DATE,
  Amounts NUMBER (6, 2),
  PRIMARY KEY (Reservation_ID)
);

CREATE TABLE CARINSURANCE (
    Insurance_ID NUMBER(10),
    Insurance_Type VARCHAR(255),
    Customer_ID NUmber(10),
    Vehicle_ID NUmber(10),
    PRIMARY KEY (Insurance_ID)
);

CREATE TABLE BRANCH (
    Branch_ID Number(10),
    Cars_ID Number(10),
    City VARCHAR(25),
    Agents_ID Number(10),
    Vehicle_ID Number(10),
    PRIMARY KEY (Branch_ID)
);


CREATE TABLE DELETEDCUSTOMER (
    Customer_ID NUMBER(10),
    Booked_Timeslots Number(4)
);

CREATE TABLE CUSTOMER
(
    Customer_ID NUMBER(10),
    FirstName VARCHAR(255),
    LastName VARCHAR(255),
    Email VARCHAR(255),
    address VARCHAR(255),
    Phone NUMBER(10),
    Booked_Timeslots Number(4),
    Agents_ID Number(10),
    Booking_ID NUMBER(10),
    PRIMARY KEY(Customer_ID)
    
);


CREATE TABLE ORDERS
(
    Order_ID NUMBER(10) NOT NULL,
    OrderDate DATE,
    Order_type VARCHAR (255),
    Customer_ID Number(10),
    Agents_ID Number(10),
    PRIMARY KEY (Order_ID)
);


CREATE TABLE VEHICLE (
    Vehicle_ID NUMBER(10),
    Vehicle_Model VARCHAR(10),
    Min_Price Number(6, 2),
    Actual_Price Number(8, 2),
    Max_Price Number(8, 2),
    Vehicle_Date DATE,
    City VARCHAR(15),
    Agent_Rank VARCHAR(6),
    Branch_ID Number(10),
    PRIMARY KEY (Vehicle_ID)
);

CREATE TABLE AGENTS (
    Agents_ID Number(10),
    Agents_Rank VARCHAR(10),
    Email VARCHAR(25),
    Customer_ID Number(10),
    Vehicle_ID Number(10),
    Branch_ID Number(10),
    PRIMARY KEY (Agents_ID)
);


INSERT INTO CUSTOMER VALUES (2209,'Amaya','Lucero','AmayaR@gmail.com','Newham Way',074589645, 3, 14698, 12347854);
INSERT INTO CUSTOMER VALUES (2210,'Frankie','Decker','Frankie@gmail.com','Abbey Road',07458965, 2, 14578, 74896753);
INSERT INTO CUSTOMER VALUES (2211,'MATTEW','ROUGHTON','MattR@gmail.com','Powis Street',0748665, 1, 13457, 48597484);
INSERT INTO CUSTOMER VALUES (2212,'NOAH','JOHNSON','NJohnson@gmil.com','brighton road',04576455, 2, 12348, 12345678);
INSERT INTO CUSTOMER VALUES (2213,'XIAO','MINN','XMing@gmail.com','Penny Lane',04578452, 3, 45789, 32145687);
INSERT INTO CUSTOMER VALUES (2014,'Mehmet ','Larson','MehmetL@gmail.com','Twickenahm Way',07457897, 5, 42567, 23456745);
INSERT INTO CUSTOMER VALUES (2785,'Lorraine ','Brown','LorrBrown@gmail.com','Saville Row',07785545, 6, 98632, 45673642);
INSERT INTO CUSTOMER VALUES (2899,'Rhea ','Zunica','Rhea@gmail.com','Chicksand Street',07458245, 3, 12456, 12345674);
INSERT INTO CUSTOMER VALUES (2877,'Louie','Richmond',NULL,'Artillery Lane',07856897, 2, 12458, 56753454);
INSERT INTO CUSTOMER VALUES (2568,'Kristen ','Ashley','Krist@gmail.com','Gresham Street',0124578, 5, 98574, 89654357);



INSERT INTO ORDERS VALUES (0000,'21-NOV-2022','Rent', 2785, 14698);
INSERT INTO ORDERS VALUES (0001,'21-OCT-2022','Buy', 2785, 14698);
INSERT INTO ORDERS VALUES (0002,'22-DEC-2022','Rent', 2785, 14698);
INSERT INTO ORDERS VALUES (0003,'22-NOV-2022','Rent', 2785, 14698);
INSERT INTO ORDERS VALUES (0004,'23-DEC-2022','Buy', 2213, 12458);
INSERT INTO ORDERS VALUES (0005,'28-OCT-2022','Rent', 2213, 45789);
INSERT INTO ORDERS VALUES (0006,'31-OCT-2022','Buy', 2785, 45789);
INSERT INTO ORDERS VALUES (0008,'14-NOV-2022','Rent', 2899, 98632);
INSERT INTO ORDERS VALUES (0009,'23-OCT-2022','Buy', 2877, 98574);
INSERT INTO ORDERS VALUES (0010,'22-DEC-2022','Rent', 2899, 98574);
INSERT INTO ORDERS VALUES (0011,'15-NOV-2022','Rent', 2209, 14698);
INSERT INTO ORDERS VALUES (0012,'21-OCT-2022','Buy', 2209, 14698);
INSERT INTO ORDERS VALUES (0013,'26-DEC-2022','Rent', 2209, 14698);
INSERT INTO ORDERS VALUES (0014,'20-NOV-2022','Rent', 2212, 14698);
INSERT INTO ORDERS VALUES (0015,'23-NOV-2022','Buy', 2213, 12458);
INSERT INTO ORDERS VALUES (0016,'22-OCT-2022','Rent', 2213, 14698);
INSERT INTO ORDERS VALUES (0017,'28-OCT-2022','Buy', 2785, 14698);
INSERT INTO ORDERS VALUES (0018,'14-NOV-2022','Rent', 2899, 98574);
INSERT INTO ORDERS VALUES (0019,'21-NOV-2022','Buy', 2877, 98574);
INSERT INTO ORDERS VALUES (0020,'20-DEC-2022','Rent', 2899, 98574);



INSERT INTO BOOKING VALUES (48597484, 2212);
INSERT INTO BOOKING VALUES (32145687, 2014);
INSERT INTO BOOKING VALUES (12345678, 2209);
INSERT INTO BOOKING VALUES (74896753, 2210);
INSERT INTO BOOKING VALUES (12347854, 2213);
INSERT INTO BOOKING VALUES (23456745, 2785);
INSERT INTO BOOKING VALUES (45673642, 2899);
INSERT INTO BOOKING VALUES (12345674, 2877);
INSERT INTO BOOKING VALUES (56753454, 2211);
INSERT INTO BOOKING VALUES (89654357, 2568);




INSERT INTO RESERVATION VALUES (98765464, 'Booked', '14-NOV-2022', '22-DEC-2022', NULL, 850.55);
INSERT INTO RESERVATION VALUES (54968425, 'Booked', '08-OCT-2022', '15-DEC-2022', NULL, 1050.55);
INSERT INTO RESERVATION VALUES (26724612, 'Available', '12-NOV-2022', '22-NOV-2022', '21-NOV-2022', 650.55);
INSERT INTO RESERVATION VALUES (32142642, 'Available', '04-NOV-2022', '18-NOV-2022', '15-NOV-2022', 720.55);
INSERT INTO RESERVATION VALUES (32612641, 'Booked', '20-NOV-2022', '20-DEC-2022', NULL, 550.55);
INSERT INTO RESERVATION VALUES (57985487, 'Booked', '16-NOV-2022', '21-DEC-2022', NULL, 350.55);
INSERT INTO RESERVATION VALUES (21456876, 'Booked', '15-OCT-2022', '07-DEC-2022', NULL, 450.55);
INSERT INTO RESERVATION VALUES (35456456, 'Available', '22-NOV-2022', '21-NOV-2022', '20-NOV-2022', 950.55);
INSERT INTO RESERVATION VALUES (22456575, 'Available', '24-NOV-2022', '30-NOV-2022', '27-NOV-2022', 830.55);
INSERT INTO RESERVATION VALUES (88795463, 'Booked', '18-NOV-2022', '08-DEC-2022', NULL, 1100.55);


INSERT INTO CARINSURANCE VALUES (98956224, 'Full', 2212, 4587);
INSERT INTO CARINSURANCE VALUES (45682132, 'Part', 2213, 6897);
INSERT INTO CARINSURANCE VALUES (32549512, 'Full', 2209, 2114);
INSERT INTO CARINSURANCE VALUES (35496458, 'Part', 2210, 1357);
INSERT INTO CARINSURANCE VALUES (14579654, 'Full', 2785, 6586);
INSERT INTO CARINSURANCE VALUES (98654534, 'Full', 2899, 4578);
INSERT INTO CARINSURANCE VALUES (56789785, 'Part', 2877, 9988);
INSERT INTO CARINSURANCE VALUES (32574537, 'Full', 2568, 5578);
INSERT INTO CARINSURANCE VALUES (68753211, 'Part', 2014, 4535);
INSERT INTO CARINSURANCE VALUES (24568365, 'Full', 2211, 8856);



INSERT INTO BRANCH VALUES (84575, 5789, 'London', 14578, 4587);
INSERT INTO BRANCH VALUES (54896, 9875, 'Manchester', 14698, 6897);
INSERT INTO BRANCH VALUES (98657, 2654, 'London', 12348, 2114);
INSERT INTO BRANCH VALUES (23545, 1545, 'Liverpool', 12456, 1357);
INSERT INTO BRANCH VALUES (48945, 3567, 'London', 45789, 6586);
INSERT INTO BRANCH VALUES (87865, 8866, 'Birmingham', 42567, 4578);
INSERT INTO BRANCH VALUES (78654, 4455, 'Birmingham', 98632, 8856);
INSERT INTO BRANCH VALUES (56877, 6677, 'London', 12458, 4535);
INSERT INTO BRANCH VALUES (87565, 3322, 'Liverpool', 98574, 5578);
INSERT INTO BRANCH VALUES (99654, 1100, 'Birmingham', 13457, 9988);


INSERT INTO VEHICLE VALUES (6897, 'Sedan', 920.99, 13000.00, 2200.00, '14-JUN-2002', 'London', 'Gold', 84575);
INSERT INTO VEHICLE VALUES (6586, 'Coupe', 1200.25, 15650.60, 3600.00, '22-MAY-2009', 'Birmingham', 'Gold', 98657);
INSERT INTO VEHICLE VALUES (2114, 'SUV', 1000.00, 12900.99, 2900.00, '16-OCT-2012', 'Manchester', 'Bronze', 54896);
INSERT INTO VEHICLE VALUES (4587, 'Crossover', 1150.50, 14000.00, 5200.00, '02-FEB-2018', 'London', 'Silver', 48945);
INSERT INTO VEHICLE VALUES (1357, 'Sedan', 950.20, 12800.00, 2650.00, '12-MAR-2010', 'Birmingham', 'Gold', 23545);
INSERT INTO VEHICLE VALUES (4578, 'Pickup', 880.99, 11000.00, 1500.00, '22-JUN-2002', 'London', 'Silver', 99654);
INSERT INTO VEHICLE VALUES (8856, 'Coupe', 780.25, 12000.60, 1400.00, '14-MAY-2009', 'Birmingham', 'Gold', 87565);
INSERT INTO VEHICLE VALUES (4535, 'Hatchback', 890.00, 12400.99, 2000.00, '02-OCT-2012', 'Manchester', 'Bronze', 56877);
INSERT INTO VEHICLE VALUES (5578, 'Van', 1050.50, 12800.00, 2200.00, '06-FEB-2018', 'London', 'Gold', 78654);
INSERT INTO VEHICLE VALUES (9988, 'Van', 899.20, 11200.00, 550.00, '08-MAR-2010', 'Birmingham', 'Silver', 87865);



INSERT INTO AGENTS VALUES (12456,'Bronze','agent001@gmail.com', 2210, 1357, 54896);
INSERT INTO AGENTS VALUES (12348,'Bronze','agent002@gmail.com', 2209, 4587, 98657);
INSERT INTO AGENTS VALUES (13457,'Bronze','agent003@gmail.com', 2212, 6586, 48945);
INSERT INTO AGENTS VALUES (14578,'Bronze','agent004@gmail.com', 2211, 2114, 84575);
INSERT INTO AGENTS VALUES (14698,'Gold','agent005@gmail.com', 2213, 6897, 48945);
INSERT INTO AGENTS VALUES (98574,'Silver','agent006@gmail.com', 2014, 4578, 99654);
INSERT INTO AGENTS VALUES (12458,'Bronze','agent007@gmail.com', 2785, 8856, 87565);
INSERT INTO AGENTS VALUES (98632,'Bronze','agent008@gmail.com', 2899, 4535, 56877);
INSERT INTO AGENTS VALUES (42567,'Bronze','agent009@gmail.com', 2877, 5578, 78654);
INSERT INTO AGENTS VALUES (45789,'Bronze','agent010@gmail.com', 2568, 9988, 87865);


INSERT INTO RECEPTION VALUES (70001, 48597484, 2212);
INSERT INTO RECEPTION VALUES (70002, 32145687, 2014);
INSERT INTO RECEPTION VALUES (70003, 12345678, 2209);
INSERT INTO RECEPTION VALUES (70004, 74896753, 2210);
INSERT INTO RECEPTION VALUES (70005, 12347854, 2213);
INSERT INTO RECEPTION VALUES (70006, 23456745, 2785);
INSERT INTO RECEPTION VALUES (70007, 45673642, 2899);
INSERT INTO RECEPTION VALUES (70008, 12345674, 2877);
INSERT INTO RECEPTION VALUES (70009, 56753454, 2211);
INSERT INTO RECEPTION VALUES (70010, 89654357, 2568);

SELECT * FROM BOOKING;
SELECT * FROM RECEPTION;
SELECT * FROM CARINSURANCE;
SELECT * FROM RESERVATION;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM VEHICLE;
SELECT * FROM AGENTS;
SELECT * FROM BRANCH;



-- Foreign keys are all created as constraints
ALTER TABLE DELETEDCUSTOMER
ADD CONSTRAINT del_cus_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE CUSTOMER
ADD CONSTRAINT cus_age_rel
FOREIGN KEY (Agents_ID)
REFERENCES AGENTS(Agents_ID)
ON DELETE SET NULL;

ALTER TABLE CUSTOMER
ADD CONSTRAINT cus_boo_rel
FOREIGN KEY (Booking_ID)
REFERENCES BOOKING(Booking_ID)
ON DELETE SET NULL;

ALTER TABLE BOOKING
ADD CONSTRAINT boo_cust_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE RECEPTION
ADD CONSTRAINT rec_cust_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE RECEPTION
ADD CONSTRAINT rec_book_rel
FOREIGN KEY (Booking_ID)
REFERENCES BOOKING(Booking_ID)
ON DELETE SET NULL;

ALTER TABLE AGENTS
ADD CONSTRAINT age_cus_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE AGENTS
ADD CONSTRAINT age_bra_rel
FOREIGN KEY (Branch_ID)
REFERENCES BRANCH(Branch_ID);

ALTER TABLE ORDERS
ADD CONSTRAINT ord_cust_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE ORDERS
ADD CONSTRAINT ord_age_rel
FOREIGN KEY (Agents_ID)
REFERENCES AGENTS(Agents_ID);

ALTER TABLE BRANCH
ADD CONSTRAINT ord_bra_rel
FOREIGN KEY (Vehicle_ID)
REFERENCES VEHICLE(Vehicle_ID);

ALTER TABLE VEHICLE
ADD CONSTRAINT veh_bra_rel
FOREIGN KEY (Branch_ID)
REFERENCES BRANCH(Branch_ID);

ALTER TABLE CARINSURANCE
ADD CONSTRAINT car_cust_rel
FOREIGN KEY (Customer_ID)
REFERENCES CUSTOMER(Customer_ID)
ON DELETE SET NULL;

ALTER TABLE CARINSURANCE
ADD CONSTRAINT car_veh_rel
FOREIGN KEY (Vehicle_ID)
REFERENCES VEHICLE(Vehicle_ID);

-- CHECKS THAT ALL THE DATES IN ORDERS ARE NOT IN THE PAST - AFTER 20-OCT
ALTER TABLE ORDERS
ADD CONSTRAINT CHK_ORD_DAT CHECK (OrderDate>='20-OCT-2022');

-- CHECKS ALL NAMES DO NOT HAVE NUMBERS
ALTER TABLE CUSTOMER
ADD CONSTRAINT CHK_NME_CUS CHECK(FirstName NOT LIKE '%[0-9]%');
-- SAME FOR LAST NAME
ALTER TABLE CUSTOMER
ADD CONSTRAINT CHK_LST_CUS CHECK(LastName NOT LIKE '%[0-9]%');

-- CHECKS EMAIL HAS THE @ SYMBOL
ALTER TABLE CUSTOMER
ADD CONSTRAINT CHK_EMA_CUS CHECK (Email LIKE '%@%');

ALTER TABLE AGENTS
ADD CONSTRAINT CHK_EMA_AGE CHECK (Email LIKE '%@%');

-- If Email is NULL it will be automatically replace by unknown@gmail.com
SELECT NVL(Email, 'unknown@gmail.com')
FROM CUSTOMER;
SELECT NVL(Email, 'unknown@gmail.com')
FROM AGENTS;
   
-- SELECT NVL(Agents_Rank, 'Gold')
-- FROM AGENTS;

-- 1.Show current price of Sedan in all the Cities
select VEHICLE_MODEL, Actual_Price, City
from   VEHICLE
where VEHICLE_MODEL = 'Sedan';

-- 2. Show largest of price value from all models associated to London and Manchester
select DISTINCT VEHICLE_MODEL, Max_Price, City
from   VEHICLE
where City = 'London' OR City = 'Manchester';

-- 3. Show minimum price for London vehicles (from all models)
select VEHICLE_MODEL, Min_Price, City
from   VEHICLE
where City = 'London';

-- 4. Find Agent who has maximum number of timeslots
SELECT Agents_ID, COUNT(Agents_ID) AS timeslots
FROM  ORDERS
GROUP BY Agents_ID
HAVING COUNT(Agents_ID) = (SELECT max(COUNT(Agents_ID))
                            FROM ORDERS
                            GROUP BY Agents_ID
                            );
                            
-- 5. Find customer which booked the maximum number of timeslots
SELECT Customer_ID, COUNT(Customer_ID) AS bookings
FROM  ORDERS
GROUP BY Customer_ID
HAVING COUNT(Customer_ID) = (SELECT max(COUNT(Customer_ID))
                            FROM ORDERS
                            GROUP BY Customer_ID
                            );

-- 6. Show all models having price higher than average for model in Birmingham
SELECT round(AVG(Actual_Price) , 2) as avg_price, Vehicle_Model, City
FROM Vehicle
Where City = 'Birmingham'
GROUP BY Vehicle_Model, City;


-- 7. Update the price for all models, for London and Manchester, for today, assuming they want to give offer of 80 GBP per vehicle
UPDATE Vehicle
SET Actual_Price = (80)
WHERE City = 'London' OR City = 'Manchester';
SELECT Distinct Vehicle_Model, City, Actual_Price
FROM VEHICLE
WHERE City = 'London' OR City = 'Manchester';



--8 Show the maximum price sold from all Gold and Bronze Agents, for all models
select VEHICLE_MODEL, max(Max_Price), Agent_Rank
from   VEHICLE
WHERE Agent_Rank != 'Silver'
GROUP BY VEHICLE_MODEL, Agent_Rank;

-- If summing all sales regardless of car models
SELECT SUM(Max_Price), Agent_Rank
from   VEHICLE, ORDERS
WHERE Agent_Rank != 'Silver'
GROUP BY Agent_Rank;


-- -- 9. Trigger: Create a trigger which places the customers, which have been deleted into a
-- -- customer table. This allows records to be maintained while improving query times for existing
-- -- customers.
-- -- UPDATE CUSTOMER
-- -- SET Booked_Timeslots= Booked_Timeslots - 1;

-- -- SELECT * FROM DELETEDCUSTOMER;

-- -- DELETE FROM CUSTOMER
-- -- WHERE Booked_Timeslots = 0;
-- -- SELECT * FROM CUSTOMER;


-- -- DROP TRIGGER DeleteCustomerRecord;

CREATE OR REPLACE TRIGGER DeleteCustomerRecord
AFTER UPDATE ON CUSTOMER
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
 WHEN (NEW.Booked_Timeslots = 0)
BEGIN
INSERT INTO DELETEDCUSTOMER(Customer_ID, Booked_Timeslots)
VALUES (:NEW.Customer_ID, :NEW.Booked_Timeslots);
END;
